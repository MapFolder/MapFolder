/*!
 * @pixi/filter-multi-color-replace - v3.1.1
 * Compiled Wed, 22 Apr 2020 18:05:28 UTC
 *
 * @pixi/filter-multi-color-replace is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var __filters=function(o,r,e){"use strict";var n="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",t="varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform float epsilon;\n\nconst int MAX_COLORS = %maxColors%;\n\nuniform vec4 originalColors[MAX_COLORS];\nuniform vec4 targetColors[MAX_COLORS];\n\nvoid main(void)\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n\n    float alpha = gl_FragColor.a;\n    if (alpha < 0.0001)\n    {\n      return;\n    }\n\n    for(int i = 0; i < MAX_COLORS; i++)\n    {\n      vec4 origColor = originalColors[i];\n      vec4 targetColor = targetColors[i];\n\n      vec3 colorDiff = origColor.rgb - gl_FragColor.rgb;\n\n      if (length(colorDiff) < epsilon)\n      {\n        gl_FragColor = targetColor;\n        return;\n      }\n    }\n    gl_FragColor = vec4(0, 0, 0, 0);\n}\n",i=function(o){function r(r,e,i){void 0===e&&(e=.05),void 0===i&&(i=null),i=i||r.length,o.call(this,n,t.replace(/%maxColors%/g,i)),this.epsilon=e,this._maxColors=i,this._replacements=null,this.uniforms.originalColors=new Float32Array(4*i),this.uniforms.targetColors=new Float32Array(4*i),this.replacements=r}o&&(r.__proto__=o),r.prototype=Object.create(o&&o.prototype),r.prototype.constructor=r;var e={replacements:{configurable:!0},maxColors:{configurable:!0},epsilon:{configurable:!0}};return e.replacements.set=function(o){var r=this.uniforms.originalColors,e=this.uniforms.targetColors,n=o.length;if(n>this._maxColors)throw"Length of replacements ("+n+") exceeds the maximum colors length ("+this._maxColors+")";r[4*n]=-1;for(var t=0;t<n;t++){var i=o[t],l=i[0];r[4*t]=l[0],r[4*t+1]=l[1],r[4*t+2]=l[2],r[4*t+3]=l[2];var s=i[1];e[4*t]=s[0],e[4*t+1]=s[1],e[4*t+2]=s[2],e[4*t+3]=s[3]}this._replacements=o},e.replacements.get=function(){return this._replacements},r.prototype.refresh=function(){this.replacements=this._replacements},e.maxColors.get=function(){return this._maxColors},e.epsilon.set=function(o){this.uniforms.epsilon=o},e.epsilon.get=function(){return this.uniforms.epsilon},Object.defineProperties(r.prototype,e),r}(r.Filter);return o.MultiColorReplaceFilter=i,o}({},PIXI,PIXI.utils);Object.assign(PIXI.filters,__filters);
//# sourceMappingURL=filter-multi-color-replace.js.map
